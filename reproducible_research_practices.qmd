---
title: "Reproducibile workflows"
subtitle: "Version Control and Computational Notebooks"
author: 
  name: "John Little"
  orcid: 0000-0002-3600-0972
  affiliation:
    - name: Duke University Libraries
      department: Center for Data & Visualization Sciences
      city: Durham
      state: NC
      country: US
      url:  https://library.duke.edu/data
institute: "Center for Data & Visualization Sciences"
date: today

format: 
  revealjs:
    #center: true
    theme: moon
    self-contained: true  
    footer:  "[John R Little](https://JohnLittle.info) ● [Center for Data & Visualization Sciences](https://library.duke.edu/data/) ● [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/)"
    logo: images/rfun_logo.png
license: "CC BY"
editor: visual
---

# Notebooks

## Reproducibility

-   **Do everything with code!**

    -   Helps reduce repetion errors
    -   Helps avoid copy/paste barriers
    -   Orchestrate workflows

## Computational Notebooks

-   Authoring environment

    -   Code chunks interspersed with natural language
    -   aka *Literate Coding*

-   Easy to read and compose

-   Graceful degradation

## Reports and Expressions

Using this method, reports (expressions such as slide, PDF, dashboards, ebooks, etc.) are rendered as part of the code execution

\

<!-- https://github.com/shafayetShafee/bsicons#readme -->

{{< bi file-earmark-pdf color=#DFDFC0 size=12rem >}} {{< bi filetype-html color=#DFDFC0 size=12rem >}} {{< bi speedometer2 color=#DFDFC0 size=12rem >}} {{< bi filteyp-pptx color=#DFDFC0 size=12rem >}} {{< bi filetype-docx color=#DFDFC0 size=12rem >}} {{< bi book color=#DFDFC0 size=12rem >}}

## Interactivity and web applications

-   Shiny
-   Flask
-   WebR
-   Plotly Dash
-   ObjservableJS

## Quarto

-   Open source / free / portable
-   Show explanatory text and code chunks
-   Show YAML format option

## <span style="color: steelblue !important; background-color: ivory; border-radius: 10px; padding: 5px;">&nbsp; Quarto Notebook in RStudio &nbsp;</span> {background-image="images/rrp/quarto_notebook.png" background-transition="fade"}

## <span style="color: steelblue !important; background-color: ivory; border-radius: 10px; padding: 5px;">&nbsp; Jupyter Notebooks &nbsp;</span> {background-image="images/rrp/labpreview.png" background-transition="fade"}

## Quarto</span>

-   A scientific publishing system
-   R, Python, ObservableJS
-   Compose with standard text editors, or basic IDEs
    -   IDEs: RStudio, Jupyter, VSCode

## Rendered Outputs

-   Artifacts that document a body of work
-   Are reproducible and modifiable when data or techniques change
-   Easy to update natural language explanations and re-render outputs
-   Schedule emails based on report parameters

## Summary of benefits

-   Using natural language clearly explain data, models, and workflows
-   Reduce dependencies on outside and undocumented steps
-   Ability to expose technical code chunks depending on audience focus
-   State of the art reproducibility
    -   21st century **container** for evidence-based, computationally-processed research

# Version Control

## Definition

-   A system to manage **projects** (repo)
-   A system to track how computer files **change over time**
-   A system that support collaborative revision
-   More than file synchronization
-   Assists in project back-ups

## Git

-   Free open source
-   Wildly successful; most broadly implemented
-   In use across the globe
-   Use it on any file system
-   Track any file
-   Use it in any environment

## &nbsp; &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp;  &nbsp; &nbsp; Scalable to project size {background-image="images/rrp/git_scaleability.png" background-transition="fade" background-size="contain"}


## Project Repositories {background-image="images/rrp/project_repos.png" background-transition="fade" background-size="contain"}


::: aside
<center>Work on any file system; Operates on at the folder level.</center>

\

\
:::

## Archival vs version-control

-   Posterity of milestones
-   Evolution tracking of workflow (transparency)

## Track change

-   When, Who, Why, What https://youtu.be/LmqQr-0Z_Dw?si=6uVJ6B8MSmx8qpdi&t=65

## Branches

-   Main branch
-   Experimentation
-   Developments
-   Merging

https://youtu.be/LmqQr-0Z_Dw?si=hrl_ysJDceXkjCrk&t=96

## GitHub

-   Profile (store and host) git repos
-   Enable collaboration across the globe or private
-   Editorial and fine-grain control

## Git + GitHub

https://youtu.be/ThC3bSs-iZA?si=1c6pIzBiMlbB5v6w&t=31

## Hubs

-   GitHub
-   GitLab
-   BitBuckent

## Duke specific hubs

-   gitlab.oit.duke.edu (netId)
-   PACE
-   Anywhere that data and coding happens.

## File Distribution and Collaboration

https://youtu.be/ThC3bSs-iZA?si=pC7vCy06CDGxzpuz&t=90

## Push

## Other project management features

https://youtu.be/ThC3bSs-iZA?si=ShxY4bylJgkxt-zK&t=100

## Basic features

Git features implemented for distribution

-   Push
-   Public or Private
-   Clone / Fork
-   Pull Request
-   Pull

## Clone

https://youtu.be/ThC3bSs-iZA?si=O18MREhlOpUiwJ6w&t=143

## Fork / PR

https://youtu.be/ThC3bSs-iZA?si=kzj82KArR4WKyT-1&t=180

## Summary

-   Git is used to track changes to your repo
-   GitHub is used to distribute your git repo and facility collaboration

# Containers

## Sharing your workspace

Ever been tempted to give someone else your laptop so they can play around with your projects, the code, the data, the settings and configurations?

Now you can share a copy of your computational environment

## How

-   **Binder**: package and share reproducible computational environments
    -   mybinder.org (public BinderHub portal)
-   **Zenodo**: general, open repository to deposit research papers, data sets, code, reports and related artifacts and connect to a citable DOI.
-   Combine GitHub releases with Zenodo to archive your milestones and share the interactive computation in a binder Hub

## Binder Hub

-   Easiest: mybinder.org open and public
    -   `quarto use binder`
-   Security demands may push you to use [singularity](https://oit-rc.pages.oit.duke.edu/rcsupportdocs/software/containers/)

## Steps

1.  Make a [GitHub Release](https://docs.github.com/en/repositories/releasing-projects-on-github/about-releases) at project milestone(s)
2.  Connect [GitHub to Zenodo](https://docs.github.com/en/repositories/archiving-a-github-repository/referencing-and-citing-content)
    1.  Mint a DOI to a GitHub Release (persistent identifier: citation; milestones)
    2.  With DOI, link to ORCID
3.  Create a publicly launchable, fully functional computation container of your work

## Examples

-   https://github.com/libjohn/workshop_rfun_iterate?tab=readme-ov-file#readme
-   https://github.com/libjohn/workshop_webscraping?tab=readme-ov-file#readme
